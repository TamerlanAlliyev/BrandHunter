'use strict';

const catalog = document.querySelector('.catalog');
const catalogList = document.querySelector('.catalog-list')
const logo = document.querySelector('.logo');
const subLategoriesLiEl = document.querySelectorAll('.sub-categories li')
const retrievedData = JSON.parse(localStorage.getItem('clickedProduct'));
const prodName = document.querySelector('.product-name p');
const brandTitle = document.querySelector('.product-name h3');
const brandName = document.querySelector('.brand-name h5');
const sku = document.querySelector('.sku h5');
const prodPrice = document.querySelector('.price');
const prodDescription = document.querySelector('.des-info');
const basketAdd = document.querySelector('.add-btn');
const basket = document.querySelector('.basket')
const headerList = document.querySelector('.header-list');
const burgerMenuIcon = document.querySelector('.burger-menu img');
const burgerMenu = document.querySelector('.burger-menu');
const exhaustedInfo = document.querySelector('.exhausted-info');
const arrowLeft = document.querySelector('.arrow-left');
const arrowRight = document.querySelector('.arrow-right');
const wrapper = document.getElementById('wrapper');
const slider = document.getElementById('slider');
const sliderImages = document.querySelectorAll('.thumbnail');
const clsContainer = document.querySelector('.cls');


/***************************************************************************************************************************************************/

let selectedSize;
let selectedSizeCount;
let index = 0;
let catalogOpen = false;
let sizeStatus = false;
let burgerMenuOpen = false;
let catalogserach = [];
const {
  brand,
  productCategory,
  productName,
  title,
  size,
  color,
  price,
  image,
  description,
  discountOffer,
  discount
} = retrievedData;

/***************************************************************************************************************************************************/

catalog.addEventListener('click', (event) => {
    event.stopPropagation();
    toggleCatalogList();
});

document.addEventListener('click', (event) => {
    const isClickedInsideCatalog = catalog.contains(event.target);
    const isClickedInsideCatalogList = catalogList.contains(event.target);

    if (!isClickedInsideCatalog && !isClickedInsideCatalogList && catalogOpen) {
        catalogList.style.display = "none";
        catalogOpen = false;
    }
});
logo.addEventListener('click', () => {
    window.location.href = "../index.html";
});
basketAdd.addEventListener('click', () => {
  if (!sizeStatus) {
    alert('Səbətə əlavə etməzdən əvvəl ölçü seçin.');
    return;
  }

  const productToAdd = { ...retrievedData, size: selectedSize };
  
  const existingProductIndex = basketProducts.findIndex(
    (product) => product.title === productToAdd.title && product.size === selectedSize
  );
  
  if (existingProductIndex !== -1) {
    basketProducts[existingProductIndex].count = (basketProducts[existingProductIndex].count || 1) + 1;
    basketProducts[existingProductIndex].countMax = selectedSizeCount;
  } else {
    productToAdd.count = 1;
    productToAdd.countMax = selectedSizeCount; 
    basketProducts.push(productToAdd);
  }

  // Tanımlamaları yap
  const count = basketProducts[existingProductIndex]?.count || 0;

  if (count > selectedSizeCount) {
    alert('Üzr istəyirik, bu məhsul stokda Tükəndi.');
    return;
  }

  localStorage.setItem('basket', JSON.stringify(basketProducts));
  console.log(basketProducts);
});
basket.addEventListener('click', () => {
  window.location.href = "../basket/basket.html"
})
burgerMenu.addEventListener('click', () => {
    if(burgerMenuOpen){
        headerList.style.display = "none";
        burgerMenuIcon.src = "../assets/icons/burger-menu.svg";
        burgerMenuOpen = false;
    }else{
        headerList.style.display = "flex";
        burgerMenuIcon.src = "../assets/icons/x-button.svg";
        burgerMenuOpen = true;
    }
  
});
window.addEventListener('resize', () => {
  imageWidth = sliderImages[0].offsetWidth + 10;
  visibleImages = Math.floor(clsContainer.offsetWidth / imageWidth);
});
arrowRight.addEventListener('click', () => {
  if (index < sliderImages.length - visibleImages) {
    index++;
  } else {
    index = 0;
  }
  updateSlider();
});
arrowLeft.addEventListener('click', () => {
  if (index > 0) {
    index--;
  } else {
    index = sliderImages.length - visibleImages;
  }
  updateSlider();
});

subLategoriesLiEl.forEach((category, index) => {
    category.addEventListener('click', () => {
        catalogserach = Object.values(category.dataset);
        console.log(catalogserach);
        localStorage.setItem('catalogLists', JSON.stringify(catalogserach));
        window.location.href = "../store/store.html";
    });
});


/***************************************************************************************************************************************************/


const toggleCatalogList = () => {
    if (catalogOpen) {
        catalogList.style.display = "none";
        catalogOpen = false;
    } else {
        catalogList.style.display = "block";
        catalogOpen = true;
    }
}
// const discountHtml = discountOffer ? `<p class="dis-price"> ₼ ${price.toFixed(2)}</p>` : '';
// <div class="product-price">${discountHtml} ₼ ${currentprice.toFixed(2)}</div>

const productInfo = () => {
  prodName.textContent = productName;
  brandTitle.textContent = `${brand} ${productName} ${title}`;
  brandName.textContent = brand;
  prodPrice.textContent = `₼ ${price}`;
  sku.textContent = title;
  prodDescription.textContent = description;
};

productInfo();

const sizeDisplay = () => {

  const prodSizes = document.querySelectorAll('.sizes');

  prodSizes.forEach((sizeElement) => {
    const sizesToShow = retrievedData.size || {};
    const availableSizes = Object.entries(sizesToShow)
      .filter(([size, count]) => count !== 0)
      .map(([size]) => size);

    sizeElement.innerHTML = availableSizes
      .map(
        (sizeValue) => `
            <div class="size-frame" data-count="${sizesToShow[sizeValue]}" data-size="${sizeValue}">${sizeValue}</div>
        `
      )
      .join('');

    const sizeSelected = sizeElement.querySelectorAll('.size-frame');
    sizeSelected.forEach((size) => {
      size.addEventListener('click', () => {
        sizeSelected.forEach((sizes) => {
          sizes.style.backgroundColor = 'rgb(255 220 220)';
          sizes.style.color = '#000';
        });

        size.style.backgroundColor = '#000';
        size.style.color = 'white';

        const dataSize = size.getAttribute('data-size');
        const dataSizeCount = size.getAttribute('data-count');

        selectedSize = dataSize;
        selectedSizeCount = dataSizeCount

        retrievedData.size = dataSize;
        sizeStatus = true;
        console.log(selectedSize);
        console.log(dataSizeCount);
        // console.log(retrievedData.size);
      });
    });
  });
};

sizeDisplay();

let basketProducts = JSON.parse(localStorage.getItem('basket')) || [];

const imgDisplay = () => {
  const productImages = document.querySelectorAll('.product-imgs');

  productImages.forEach((img) => {
    img.innerHTML = retrievedData.image.map((imageValue) => `
        <img src="../${imageValue}" alt="">`).join('');
  })
}

imgDisplay();


const exhaustedDisplay = () => {
  if (retrievedData.size.length === 0) {
    exhaustedInfo.textContent = `Stokda yoxdur. Sifariş etmək üçün Whatsapp və ya Instagram adresimizlə əlaqə saxlayın.`
  }
}


const imageSlidersDisplay = () => {
  const profileImages = document.getElementById('featured');
  let profileImg = retrievedData.image[0];
  profileImages.src = `../${profileImg}`;

  const sliderImages = document.getElementById('slider');

  sliderImages.innerHTML = retrievedData.image.map((imageValue) => `
    <img class="thumbnail" src="../${imageValue}" alt="">
`).join('');

  const productImages = document.querySelectorAll('.thumbnail');

  productImages.forEach((img, imgIndex) => {
    img.addEventListener('click', () => {
      profileImages.src = `../${retrievedData.image[imgIndex]}`;
    });
  });

}

imageSlidersDisplay();

const imageWidth = sliderImages[0].offsetWidth + 10;
const visibleImages = Math.floor(clsContainer.offsetWidth / imageWidth);

function updateSlider() {
  const translateValue = -index * imageWidth;
  slider.style.transform = `translateX(${translateValue}px)`;
}
